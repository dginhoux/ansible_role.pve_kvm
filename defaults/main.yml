---


##########################################
#### QUICK EXPLAIN FOR MAINS VARS

## ANSIBLE INVENTORY
# - it must contains all used pve server and must "become" on them
# - kvm instances are not necessary present in it (except if you use the same for interact with guest OS)


## ACTIONS POSSIBLE ON KVM INSTANCES
#  create, remove, poweron, poweroff, update, clone


## MAIN LIST : pve_kvm_list
# The var "pve_kvm_list" must contains all kvm instance with all their specifications
# Mandatory fields for each instance are :
#    name:      > instance name
#    vmid:      > OPTIONNAL it can be automatically set or found by this role if not set here
#    node:      > pve server where is this instance
#    api_host:  > pve_server used by this role to compute tasks (delegate_to / inventory name)
#    action     > create, remove, poweron, poweroff, update, clone
#                 this action can be forced in playbook ; read QUICK EXPLAIN FOR PLAYBOOKS

# other fields can be found here : https://docs.ansible.com/ansible/latest/collections/community/general/proxmox_kvm_module.html

## PVE SERVER CREDENTIALS
# can be defined global OR can be specified for each instance
##########################################



##########################################
#### QUICK EXPLAIN FOR MAINS PLAYBOOKS

## ALL TASKS MUST BE RUN ON THE LOCAL ANSIBLE CONTROLLER LIKE THAT
## ONLY SPECIFIC TASKS WILL BE "delegate_to" PVE SERVER
# - name: Manage pve_kvm
#   hosts: localhost
#   connection: local
#   tasks:
#     - name: Manage pve_kvm
#       ansible.builtin.include_role:
#         name: dginhoux.pve_kvm

## These vars are optionals and must be used in playbooks to :
# - limit action for certains instance
#     pve_kvm_limit_list: []
#     pve_kvm_limit_list:
#       - vm1
#       - vm4
# - force action to an other than specified in the "pve_kvm_list"
#     pve_kvm_force_action: "" ## create, remove, poweron, poweroff, update, clone
##########################################




## GLOBAL PVE SERVER CREDENTIALS
pve_kvm_global_api_user: root@pam
pve_kvm_global_api_password: ROOTroot1234@
pve_kvm_global_api_token_id: ""
pve_kvm_global_api_token_secret: ""
pve_kvm_global_validate_certs: false
pve_kvm_global_timeout: 60
pve_kvm_global_cloudinit_snippet_path: "/var/lib/vz/snippets"


## GLOBAL BEHAVIOR OF THE 
## read https://docs.ansible.com/ansible/latest/collections/community/general/proxmox_kvm_module.html#parameter-proxmox_default_behavior
# pve_kvm_global_default_behavior: compatibility
pve_kvm_global_default_behavior: no_defaults


## PLAYBOOKS OVERRIDING 
pve_kvm_force_action: ""
pve_kvm_limit_list: []


## MAIN LIST
pve_kvm_list:
  - name: vm1
    vmid: 10001
    action: poweron   ## create, remove, poweron, poweroff, update, clone
    node: srv-proxmox1
    api_host: srv-proxmox1.infra.ginhoux.net
    # api_user:
    # api_password:
    # api_token_id:
    # api_token_secret:
    # pve_default_behavior:
    onboot: true
    boot: ndc
    bootdisk: scsi0
    description: vm1
    kvm: true
    ostype: l26
    sockets: 1
    cores: 2
    memory: 4096
    balloon: 1024
    # shares: 0
    vga: std  # Optioanl : std (default), cirrus, vmware, qxl, serial0, serial1, serial2, serial3, qxl2, qxl3, qxl4
    net_interfaces_list:
      - id: net0
        model: virtio                 # Optional : virtio - e1000 - rtl8139 - vmxnet3
        hwaddr: 02:42:c2:e0:43:a3     # Optional. If not indicated, Proxmox will assign one automatically.
        bridge: vmbr0
        firewall: false               # Optional
        disconnect: true              # Optional
        # multiqueue: 2               # Optional
        # rate_limit: 250             # Optional (In MB/s)
        # vlan_tag: 400               # Optional
    hard_disks_list:
      - id: 0
        bus: virtio                   # Optional : virtio (default), ide, sata, scsi
        storage: local-datastore
        size: 30
        format: qcow2                 # Optional : qcow2, raw (default), subvol
        backup: true                  # Optional
        skip_replication: false       # Optional
        cache: none                   # Optional : none (default), directsync, writethrough, writeback, unsafe
        io_thread: false              # Optional
        ssd_emulation: false          # Optional
    ide:    # Optional
      # ide0: local:cloudinit,format=qcow2    # cloud-init drive
      ide2: none,media=cdrom                  # cdrom drive

    # nocloud format for Linux and configdrive2 for Windows
    citype: nocloud
    cicustom: user=local:snippets/vm1.yaml
    ciuser: deploy
    cipassword: ROORrrot1234@
    # ci_sshkeys: "{{ lookup('file', 'ansible_id_rsa.pub') }}"
    ipconfig:
      ipconfig0: 'ip=192.168.175.99/24,gw=192.168.175.254'
    nameservers:
      - 192.168.175.254
    searchdomains: infra.ginhoux.net
    snippet: |
      hostname: vm1
      manage_etc_hosts: true
      fqdn: vm1.infra.ginhoux.net
      user: deploy
      password: DELZPezkdzjlkdmzedKDAKKZAL
      ssh_authorized_keys:
        - ssh-rsa AAAAB3Nz....BtKPtySyKxr/w== rundeck@srv-rundeck
      chpasswd:
        expire: False
      users:
        - user1
      package_upgrade: false
      network:
        version: 1
        config:
            - type: physical
              name: eth0
              mac_address: '02:42:c2:e0:43:a3'
              subnets:
              - type: static
                address: '192.168.175.99'
                netmask: '255.255.255.0'
                gateway: '192.168.175.254'

  - name: vm2
    vmid: 10002
    action: clone
    node: srv-proxmox1
    api_host: srv-proxmox1.infra.ginhoux.net
    full_clone: true    # true for full ; false for linkedclone
    src_vmid: 10001
    src_name: vm1
    # src_snapname: snap1 ## The name of the snapshot. Used only with clone.
    storage: local-datastore
    # Use format=unspecified and full=false for a linked clone.
    format: qcow2   ## cloop, cow, qcow, qcow2 (default), qed, raw, vmdk
    # Target node. Only allowed if the original VM is on shared storage.
    # target: "srv-prxomox2"

    cores: 4


  - name: vm3
    vmid: 10003
    action: poweroff
    node: srv-proxmox1
    api_host: srv-proxmox1.infra.ginhoux.net
    memory: 4096

  - name: vm4
    vmid: 10004
    action: create
    node: srv-proxmox4
    api_host: srv-proxmox4.infra.ginhoux.net


## PVE SERVER DEPENDENCIES
pve_kvm_apt_dependencies_install: true
pve_kvm_apt_dependencies_list:
  - python3-pip
  - python3-proxmoxer
  - python3-requests
